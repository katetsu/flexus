# Get variables from Makefile.defs
include $(FLEXUS_ROOT)/makefile.defs

# Compile with GCC.  We can compile each source file separately
SELECTED_CC=gcc

include makefile.all_ccs

.cpp.$(OEXT):
	echo "$(GCC) $(INCLUDES) $(VARIANT_DEFINES) $(GCC_CFLAGS) $< -o $*.$(OEXT)"
	$(GCC) $(INCLUDES) $(VARIANT_DEFINES) $(GCC_CFLAGS) $< -o $*.$(OEXT)

boost_bin/%.$(BOOST_OEXT): $(BOOST_SRC_DIR)/%.cpp
	echo "$(GCC) $(INCLUDES) $(VARIANT_DEFINES) $(GCC_CFLAGS) $< -o $@"
	mkdir -p $(dir $@)
	$(GCC) $(INCLUDES) $(VARIANT_DEFINES) $(GCC_CFLAGS) $< -o $@

%_$(VARIANT).a: $(patsubst %.cpp,%.$(OEXT),$(SOURCES))
	echo "$(AR) $(AR_FLAGS) $@ $^"
	$(AR) $(AR_FLAGS) $@ $^
	echo "$(RANLIB) $@"
	$(RANLIB) $@
	rm -f $@.fresh

libboost%.a: $(addprefix boost_bin/,$(patsubst %.cpp,%.$(BOOST_OEXT),$(SOURCES)))
	echo "$(AR) $(AR_FLAGS) $@ $^"
	$(AR) $(AR_FLAGS) $@ $^
	echo "$(RANLIB) $@"
	$(RANLIB) $@
	rm -rf boost_bin

test/core-test.$(VARIANT_EXT): $(patsubst %.cpp,%.$(OEXT),$(SOURCES))
	echo "$(GCC) $(GCC_LFLAGS) -L$(FLEXUS_INCLUDE)/core $^ -lcore_$(VARIANT) -lboost_date_time -lboost_serialization -lboost_regex  -o $@"
	$(GCC) $(GCC_LFLAGS) -L$(FLEXUS_INCLUDE)/core $^ -lcore_$(VARIANT) -lboost_date_time -lboost_serialization -lboost_regex -o $@
