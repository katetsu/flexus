# DO-NOT-REMOVE begin-copyright-block 
#
# Redistributions of any form whatsoever must retain and/or include the
# following acknowledgment, notices and disclaimer:
#
# This product includes software developed by Carnegie Mellon University.
#
# Copyright 2012 by Mohammad Alisafaee, Eric Chung, Michael Ferdman, Brian 
# Gold, Jangwoo Kim, Pejman Lotfi-Kamran, Onur Kocberber, Djordje Jevdjic, 
# Jared Smolens, Stephen Somogyi, Evangelos Vlachos, Stavros Volos, Jason 
# Zebchuk, Babak Falsafi, Nikos Hardavellas and Tom Wenisch for the SimFlex 
# Project, Computer Architecture Lab at Carnegie Mellon, Carnegie Mellon University.
#
# For more information, see the SimFlex project website at:
#   http://www.ece.cmu.edu/~simflex
#
# You may not use the name "Carnegie Mellon University" or derivations
# thereof to endorse or promote products derived from this software.
#
# If you modify the software you must place a notice on or within any
# modified version provided or made available to any third party stating
# that you have modified the software.  The notice shall include at least
# your name, address, phone number, email address and the date and purpose
# of the modification.
#
# THE SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY WARRANTY OF ANY KIND, EITHER
# EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO ANY WARRANTY
# THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS OR BE ERROR-FREE AND ANY
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
# TITLE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY
# BE LIABLE FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO DIRECT, INDIRECT,
# SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN
# ANY WAY CONNECTED WITH THIS SOFTWARE (WHETHER OR NOT BASED UPON WARRANTY,
# CONTRACT, TORT OR OTHERWISE).
#
# DO-NOT-REMOVE end-copyright-block   
# Get variables from Makefile.defs
###############
include $(FLEXUS_ROOT)/makefile.defs

# Include the common parts of the Makefile
###############
include $(FLEXUS_ROOT)/makefile.simulator_all_ccs

.cpp.$(OEXT):
	$(ECHO) "$(GCC) $(INCLUDES) $(GCC_CFLAGS) $(VARIANT_DEFINES) $< -o $*.$(OEXT)"
	$(GCC) $(INCLUDES) $(GCC_CFLAGS) $(VARIANT_DEFINES) $< -o $*.$(OEXT)

.PHONY: $(SIMULATOR).$(VARIANT_EXT).deps
$(SIMULATOR).$(VARIANT_EXT).deps: $(COMPONENTS_WITH_LIBS)
$(SIMULATOR).$(VARIANT_EXT): $(patsubst %.cpp,%.$(OEXT),$(wildcard *.cpp)) $(COMPONENT_LIB_PATHS)
	$(ECHO) "$(GCC) $(GCC_LFLAGS) *.$(OEXT) $(COMPONENT_LIB_PATHS) $(CORE_LIB_PATH) $(BOOST_LIBRARIES)  -o $@"
	$(GCC) $(GCC_LFLAGS) *.$(OEXT) $(COMPONENT_LIB_PATHS) -L$(CORE_DIR) -lcore_$(VARIANT) $(BOOST_LIBRARIES)  -o $@


.PHONY: libflexus_$(SIMULATOR)_$(VARIANT).so.deps
	
ifeq ($(SUPPORTS_QEMU),true)
libflexus_$(SIMULATOR)_$(VARIANT).so.deps: $(COMPONENTS_WITH_LIBS) $(CORE_QEMU)
libflexus_$(SIMULATOR)_$(VARIANT).so: $(patsubst %.cpp,%.$(OEXT),$(wildcard *.cpp)) $(COMPONENT_LIB_PATHS) $(CORE_DIR)/libcore_$(VARIANT).a.fresh
	$(ECHO) "$(GCC) $(GCC_QEMU_LFLAGS) *.$(OEXT) $(COMPONENT_LIB_PATHS) -L$(CORE_DIR) -Wl,--whole-archive -lcore_$(VARIANT) -lqemu_$(VARIANT) $(BOOST_LIBRARIES) -o $@"
	$(GCC) *.$(OEXT) $(GCC_QEMU_LFLAGS) $(COMPONENT_LIB_PATHS) -L$(CORE_DIR) -Wl,--whole-archive -lcore_$(VARIANT) -lqemu_$(VARIANT) $(BOOST_LIBRARIES) -o $@
endif

